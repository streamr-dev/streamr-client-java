name: CI

on:
  pull_request:
    branches:
      - 'release/v3.0.0'
  push:
    branches:
      - 'release/v3.0.0'

env:
  JAVA_VERSION: '8.0.282+8'
  make: make -f Makefile.ci

jobs:
  build:
    name: Check source format, build and unit test
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "datetime=$(date +'%Y-%m-%d-%H.%M.%S')" >> $GITHUB_ENV
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v2.1.0
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'zulu'
      - uses: actions/cache@v2.1.5
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('build.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Check source format
        run: $make fmt
      - name: Build
        run: $make build
      - name: Unit Test
        run: $make test-unit
#      - name: PMD static analysis
#        run: $make pmd
      - name: Codenarc for Groovy tests
        run: $make codenarc
      - uses: actions/upload-artifact@v2.2.3
        with:
          name: streamr-client-java-report-${{ env.datetime }}-${{ github.job }}
          if: failure()
          path: client/build/reports
          retention-days: 90
  integration-test:
    name: Integration test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-java@v2.1.0
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'zulu'
      - uses: actions/cache@v2.1.5
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('build.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Start Streamr Docker Stack
        uses: streamr-dev/streamr-docker-dev-action@v1.0.0-alpha.3
        with:
          services-to-start: 'mysql redis core-api cassandra parity-node0 parity-sidechain-node0 bridge data-union-server broker-node-storage-1 broker-node-no-storage-1 broker-node-no-storage-2 nginx smtp'
      - name: Integration Test
        run: $make test-integration
  streamr-client-testing-tool:
    name: ${{ matrix.config-name }} ${{ matrix.test-name }}
    needs:
      - build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        test-name:
          - stream-cleartext-unsigned
          - stream-cleartext-signed
          - stream-encrypted-shared-signed
          - stream-encrypted-shared-rotating-signed
          - stream-encrypted-exchanged-rotating-signed
          - stream-encrypted-exchanged-rotating-revoking-signed
        config-name:
          - default
          - js-only
          - java-only
          - realtime-only
          - js-realtime-only
          - java-realtime-only
    env:
      NUM_MESSAGES: 20
      TEST_NAME: ${{ matrix.test-name }}
      CONFIG_NAME: ${{ matrix.config-name }}
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Use Node.js 14
        uses: actions/setup-node@v2.1.5
        with:
          node-version: "14.x"
      - name: Start Streamr Docker Stack
        uses: streamr-dev/streamr-docker-dev-action@v1.0.0-alpha.3
        with:
          services-to-start: "mysql redis core-api cassandra parity-node0 parity-sidechain-node0 bridge broker-node-storage-1 broker-node-no-storage-1 nginx smtp"
      - uses: actions/checkout@v2.3.4
        with:
          repository: streamr-dev/streamr-client-testing
          path: streamr-client-testing
      - uses: actions/setup-java@v2.1.0
        with:
          java-version: '8'
          distribution: 'zulu'
      - name: setup-client-testing
        working-directory: streamr-client-testing
        run: |
          ## npm install is used because package-lock.json could be from a previous client version.
          npm install
          ./gradlew fatjar
      - uses: nick-invision/retry@v2.4.1
        name: run-client-testing
        with:
          max_attempts: 2
          timeout_minutes: 8
          retry_on: error
          command: cd streamr-client-testing && java -jar build/libs/client_testing-1.0-SNAPSHOT.jar -s $TEST_NAME -c config/$CONFIG_NAME.conf -n $NUM_MESSAGES
