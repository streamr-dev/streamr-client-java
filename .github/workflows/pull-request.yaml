name: Pull Request

on:
  pull_request:

env:
  JAVA_VERSION: '1.8'
  JDK_FILE: 'zulu8.50.0.51-ca-jdk8.0.275-linux_x64.zip'
  JDK_URL: 'https://static.azul.com/zulu/bin'

jobs:
  build:
    name: Check source format, build and unit test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      - run: |
          curl --show-error --silent --output "$JDK_FILE" "$JDK_URL/$JDK_FILE"
      - uses: actions/setup-java@v1.4.3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          jdkFile: "$JDK_FILE"
      - uses: actions/cache@v2.1.3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('build.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Check source format
        run: make -f Makefile.ci fmt
      - name: Build
        run: make -f Makefile.ci build
      - name: Unit Test
        run: make -f Makefile.ci test-unit
  integration-test:
    name: Integration test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - run: |
          curl --show-error --silent --output "$JDK_FILE" "$JDK_URL/$JDK_FILE"
      - uses: actions/setup-java@v1.4.3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          jdkFile: "$JDK_FILE"
      - uses: actions/cache@v2.1.3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('build.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Start Streamr Docker Stack
        uses: streamr-dev/streamr-docker-dev-action@v1.0.0-alpha.2
        with:
          services-to-start: 'mysql redis engine-and-editor cassandra parity-node0 parity-sidechain-node0 bridge data-union-server broker-node-storage-1 broker-node-no-storage-1 broker-node-no-storage-2 nginx smtp'
      - name: Integration Test
        run: make -f Makefile.ci test-integration

