plugins {
	id 'java-library-conventions'
	id 'maven-publish'
}
apply from: '../gradle/loadProps.gradle'

description = 'A Java library to interact with Streamr Network'

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java']
		}
	}
	test {
		java {
			srcDirs = ['src/test/java']
		}
	}
}
// FAT Jar technology required by Streamr client testing tool
def jarManifest = [
		'Implementation-Title': "Streamr Java Client v${version}",
		'Implementation-Version': version,
]
jar {
	manifest {
		attributes(jarManifest)
	}
}
// https://docs.gradle.org/current/userguide/working_with_files.html#sec:creating_uber_jar_example
tasks.register('fatJar', Jar) {
	description = 'Creates a Jar file with all dependencies included.'
	group = JavaBasePlugin.BUILD_TASK_NAME
	archiveClassifier = 'fat'
	duplicatesStrategy = 'exclude'

	manifest {
		attributes(jarManifest)
	}
	from sourceSets.main.output
	dependsOn configurations.compileClasspath
	from {
		configurations.compileClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
	}
}
// End FAT Jar
ext {
	okHttpVersion = '4.9.1'
	javaWebSocketVersion = '1.5.1'
	bouncyCastleVersion = '1.69'
}
// https://docs.gradle.org/current/userguide/java_library_plugin.html
dependencies {
	implementation project(":protocol")
	api("com.squareup.okhttp3:okhttp:${okHttpVersion}")
	implementation("com.squareup.okio:okio") {
		because "OkHttpClient requires okio"
	}
	implementation("org.java-websocket:Java-WebSocket:${javaWebSocketVersion}") {
		exclude group: 'org.slf4j', module: 'slf4j-api'
	}
	implementation("org.bouncycastle:bcprov-jdk15on:${bouncyCastleVersion}") {
		because 'Web3j has same dependency and EncryptionUtil requires PEM'
	}
	// Transitive dependencies leaked from other dependencies
	implementation("org.web3j:codegen:${web3jVersion}") { // DO NOT USE! This should be a build time dep
		exclude group: 'org.junit.platform'
		exclude group: 'org.junit.jupiter'
		exclude group: 'org.junit.vintage'
	}
	implementation("com.googlecode.json-simple:json-simple:1.1.1") { // DO NOT USE! This should be a build time dep
		exclude group: 'junit', module: 'junit'
	}
	// End transitive dependencies
}
// https://docs.gradle.org/current/userguide/resolution_strategy_tuning.html
//configurations.all {
//	resolutionStrategy {
//		failOnVersionConflict()
//	}
//}
// https://docs.gradle.org/current/userguide/publishing_setup.html
publishing {
	publications {
		clientWithSourceAndJavadoc(MavenPublication) {
			artifactId = 'client'
			groupId project.group
			version project.version
			from components.java
			versionMapping {
				usage('java-api') {
					fromResolutionOf('runtimeClasspath')
				}
				usage('java-runtime') {
					fromResolutionResult()
				}
			}
			pom {
				name = 'Streamr Java Client Library'
				description = project.description
				url = 'https://streamr.network'
				licenses {
					license {
						name = 'The Apache License, Version 2.0'
						url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
					}
				}
				developers {
					developer {
						id = 'hpihkala'
						name = 'Henri Pihkala'
						email = 'henri.pihkala@streamr.com'
					}
					developer {
						id = 'kare'
						name = 'Kare Nuorteva'
						email = 'kare.nuorteva@streamr.com'
					}
				}
				scm {
					connection = 'scm:git:git://github.com/streamr-dev/streamr-client-java'
					developerConnection = 'scm:git:ssh://github.com/streamr-dev/streamr-client-java'
					url = 'https://github.com/streamr-dev/streamr-client-java'
				}
			}
		}
	}
}
